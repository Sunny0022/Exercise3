QUESTION

Design a table structure for following conditions:
A user can write many articles. Each written article will fall under one category. Remember that many articles can be written under same category.
The users can be of two types viz. admin or normal. A user can post multiple comments on an article.
Now write queries for:

Q1) manage(create, update, delete) categories, articles, comments, and users



DUMPArticleBio.sql



Q2) select all articles whose author's name is user3 (Do this exercise using variable also).



2.1) WITHOUT VARIABLE


Select a.title as article_name from articles as a 
join user as u on u.id = a.user_id && u.name = 'user3'; 

+----------------+
| article_name   |
+----------------+
| Plantation     |
| Panaroma       |
| 5-G Technology |
+----------------+


2.2) USING VARIABLE


select @var1:= group_concat(title) from articles as a 
join user as u on u.id = a.user_id && u.name = 'user3'; 


+---------------------------------+
@var1:= group_concat(title)
Plantation,Panaroma,5-G Technology
+---------------------------------+

select @var1;

+---------------------------------+
@var1
Plantation,Panaroma,5-G Technology
+---------------------------------+

Q3) For all the articles being selected above, select all the articles and also the comments associated with those articles in a single query (Do this using subquery also)


3.1) USING A NESTED QUERY

select a.title as article_title, c.title as comments_title 
from articles as a, comments as c
where a.id in (select c.article_id from comments);


+----------------+-----------------+
| article_title  | comments_title  |
+----------------+-----------------+
| Roadways       | comment_title 1 |
| Plantation     | comment_title 4 |
| GDP            | comment_title 3 |
| Warehouse      | comment_title 2 |
| Climate        | comment_title 5 |
| Green bonds    |                 |
| Panaroma       |                 |
| 5-G Technology |                 |
| Panaroma       | comment_title 7 |
| Warehouse      | comment_title 8 |
+----------------+-----------------+

3.2) WITHOUT A NESTED QUERY

Select a.title as article_title, c.title as comments_title from articles as a
join comments as c on a.id = c.article_id;

+----------------+-----------------+
| article_title  | comments_title  |
+----------------+-----------------+
| Roadways       | comment_title 1 |
| Plantation     | comment_title 4 |
| GDP            | comment_title 3 |
| Warehouse      | comment_title 2 |
| Climate        | comment_title 5 |
| Green bonds    |                 |
| Panaroma       |                 |
| 5-G Technology |                 |
| Panaroma       | comment_title 7 |
| Warehouse      | comment_title 8 |
+----------------+-----------------+



Q4 Write a query to select all articles which do not have any comments (Do using subquery also)


4.1)  USING A NESTED QUERY

select a.title as article_title, c.title as comments_title from articles as a, comments as c
where a.id in (select c.article_id from comments where c.title = '');

+----------------+----------------+
| article_title  | comments_title |
+----------------+----------------+
| Green bonds    |                |
| Panaroma       |                |
| 5-G Technology |                |
+----------------+----------------+

4.2)  WITHOUT A NESTED QUERY

select a.title, c.title as comments_title from articles as a
Join comments as c on (c.article_id = a.id AND c.title = '');

+----------------+----------------+
| title          | comments_title |
+----------------+----------------+
| Green bonds    |                |
| Panaroma       |                |
| 5-G Technology |                |
+----------------+----------------+


5 Write a query to select article which has maximum comments


select u.name, u.type, a.title, count(c.id) as commentCount from articles as a
join user as u on u.id = a.user_id
Left join comments as c on a.id = c.article_id
group by a.id 
order by commentCount desc limit 2;

+-------------+------------+------+
name	type	title	commentCount
user3	user	Panaroma	2
user6	user	Warehouse	2
+-------------+------------+------+

6 Write a query to select article which does not have more than one comment by the same user ( do this using left join and group by )


select u.name, u.type, a.title, count(c.id) = 1 as commentCount from articles as a
join user as u on u.id = a.user_id
left join comments as c on a.id = c.article_id
group by a.id
order by a.title;

+-------------+------------+------+
name	type	title	   commentCount
user3	user	5-G Technology	1
user1	user	Climate	        1
user4	user	GDP	        1
user7	admin	Green bonds	1
user3	user	Panaroma	0
user3	user	Plantation	1
user2	user	Roadways	0
user1	user	Smart City	0
user6	admin	Warehouse	1
+-------------+------------+------+

-------------------------------------------------------------END-----------------------------------------------------------------------
