QUESTIONS

Design a table structure for following conditions:
A user can write many articles. Each written article will fall under one category. Remember that many articles can be written under same category.
The users can be of two types viz. admin or normal. A user can post multiple comments on an article.
Now write queries for:

Q1) manage(create, update, delete) categories, articles, comments, and users

Answers


Structure : Create_Tables file
DUMP  :  DUMPmagazine.sql 



Q2) select all articles whose author's name is user3 (Do this exercise using variable also).

Answers

2.1) WITHOUT VARIABLE

Select * from articles as a
join user as u on u.id = a.user_id where u.author_name = 'user3';

+----+----------------+---------+-------------+----+-------------+------+
| id | article_title  | user_id | category_id | id | author_name | type |
+----+----------------+---------+-------------+----+-------------+------+
|  3 | Plantation     |       3 |           9 |  3 | user3       | user |
|  7 | Panaroma       |       3 |           4 |  3 | user3       | user |
|  8 | 5-G Technology |       3 |           5 |  3 | user3       | user |
+----+----------------+---------+-------------+----+-------------+------+

2.2) USING VARIABLE

set @var1 = 'user3';
Select * from articles as a
join user as u on u.id = a.user_id where u.author_name = @var1;

+----+----------------+---------+-------------+----+-------------+------+
| id | article_title  | user_id | category_id | id | author_name | type |
+----+----------------+---------+-------------+----+-------------+------+
|  3 | Plantation     |       3 |           9 |  3 | user3       | user |
|  7 | Panaroma       |       3 |           4 |  3 | user3       | user |
|  8 | 5-G Technology |       3 |           5 |  3 | user3       | user |
+----+----------------+---------+-------------+----+-------------+------+

Q3) For all the articles being selected above, select all the articles and also the comments associated with those
articles in a single query (Do this using subquery also)

Answers


3.1) USING A NESTED QUERY





+----------------+----------------------------------+
| article_title  | comments_name                    |
+----------------+----------------------------------+
| 5-G Technology | comment_title 8,comment_title 9  |
| Panaroma       | comment_title 7,comment_title 10 |
| Plantation     | comment_title 3                  |
+----------------+----------------------------------+

3.2) WITHOUT A NESTED QUERY

Select a.article_title, group_concat(c.comment_title) as comment_name from articles as a 
left join comments as c on c.article_id = a.id
left join user as u on u.id = a.user_id where u.author_name = 'user3'
group by a.article_title;

+----------------+----------------------------------+
| article_title  | comments_name                    |
+----------------+----------------------------------+
| 5-G Technology | comment_title 8,comment_title 9  |
| Panaroma       | comment_title 7,comment_title 10 |
| Plantation     | comment_title 3                  |
+----------------+----------------------------------+

  
Q4 Write a query to select all articles which do not have any comments (Do using subquery also)


4.1)  USING A NESTED QUERY



+----------------+----------------+
| article_title  | comments_title |
+----------------+----------------+
| GDP            |       Null     |
| Smart City     |       Null     |
+----------------+----------------+

4.2)  WITHOUT A NESTED QUERY

select a.article_title, c.comment_title from articles as a
left Join comments as c on c.article_id = a.id where c.comment_title is null;
+----------------+----------------+
| article_title  | comments_title |
+----------------+----------------+
| GDP            |       Null     |
| Smart City     |       Null     |
+----------------+------------


5 Write a query to select article which has maximum comments

select author, article_name, max(commentCount) as maximum_comments from
(select u.author_name as author, a.article_title as article_name, count(c.id) as commentCount from articles as a
left join user as u on u.id = a.user_id
left join comments as c on a.id = c.article_id
group by a.article_title
order by commentCount desc)
as counts;

+-------------+-------+----------------+----------+
| author      | article_name  | maximum_comments  |
+-------------+-------+----------------+----------+
| user3       | Panaroma      |        3          |
+-------------+-------+----------------+----------+

6 Write a query to select article which does not have more than one comment by the same user ( do this using left join and group by )

select u.author_name, a.article_title, count(c.id)  as commentCount from articles as a
left join user as u on u.id = a.user_id
left join comments as c on a.id = c.article_id
group by a.id
having commentCount <= 1 ;

+-------------+---------------+--------------+
| author_name | article_title | commentCount |
+-------------+---------------+--------------+
| user1       | Smart City    |            0 |
| user4       | GDP           |            0 |
| user6       | Green bonds   |            1 |
| user1       | Climate       |            1 |
| user2       | Roadways      |            1 |
| user3       | Plantation    |            1 |
+-------------+---------------+--------------+
-------------------------------------------------------------END-----------------------------------------------------------------------
